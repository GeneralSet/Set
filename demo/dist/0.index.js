(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../pkg/set.js":
/*!*********************!*\
  !*** ../pkg/set.js ***!
  \*********************/
/*! exports provided: __wbg_f_random_js_random_n, random_f64, Set, __wbindgen_object_clone_ref, __wbindgen_object_drop_ref, __wbindgen_string_new, __wbindgen_number_new, __wbindgen_number_get, __wbindgen_undefined_new, __wbindgen_null_new, __wbindgen_is_null, __wbindgen_is_undefined, __wbindgen_boolean_new, __wbindgen_boolean_get, __wbindgen_symbol_new, __wbindgen_is_symbol, __wbindgen_string_get, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_f_random_js_random_n\", function() { return __wbg_f_random_js_random_n; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"random_f64\", function() { return random_f64; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Set\", function() { return Set; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_clone_ref\", function() { return __wbindgen_object_clone_ref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_string_new\", function() { return __wbindgen_string_new; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_number_new\", function() { return __wbindgen_number_new; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_number_get\", function() { return __wbindgen_number_get; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_undefined_new\", function() { return __wbindgen_undefined_new; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_null_new\", function() { return __wbindgen_null_new; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_is_null\", function() { return __wbindgen_is_null; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_is_undefined\", function() { return __wbindgen_is_undefined; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_boolean_new\", function() { return __wbindgen_boolean_new; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_boolean_get\", function() { return __wbindgen_boolean_get; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_symbol_new\", function() { return __wbindgen_symbol_new; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_is_symbol\", function() { return __wbindgen_is_symbol; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_string_get\", function() { return __wbindgen_string_get; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _set_bg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./set_bg */ \"../pkg/set_bg.wasm\");\n/* tslint:disable */\n\n\nconst __wbg_f_random_js_random_n_target = Math.random;\n\nfunction __wbg_f_random_js_random_n() {\n    return __wbg_f_random_js_random_n_target();\n}\n\nfunction random_f64() {\n    return _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"random_f64\"]();\n}\n\nconst TextDecoder = typeof self === 'object' && self.TextDecoder\n    ? self.TextDecoder\n    : __webpack_require__(/*! util */ \"./node_modules/util/util.js\").TextDecoder;\n\nlet cachedDecoder = new TextDecoder('utf-8');\n\nlet cachedUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachedUint8Memory === null ||\n        cachedUint8Memory.buffer !== _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer)\n        cachedUint8Memory = new Uint8Array(_set_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    return cachedUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedDecoder.decode(getUint8Memory().slice(ptr, ptr + len));\n}\n\nlet cachedUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachedUint32Memory === null ||\n        cachedUint32Memory.buffer !== _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer)\n        cachedUint32Memory = new Uint32Array(_set_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    return cachedUint32Memory;\n}\n\nlet cachedGlobalArgumentPtr = null;\nfunction globalArgumentPtr() {\n    if (cachedGlobalArgumentPtr === null)\n        cachedGlobalArgumentPtr = _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_global_argument_ptr\"]();\n    return cachedGlobalArgumentPtr;\n}\n\nfunction getGlobalArgument(arg) {\n    const idx = globalArgumentPtr() / 4 + arg;\n    return getUint32Memory()[idx];\n}\n\nconst TextEncoder = typeof self === 'object' && self.TextEncoder\n    ? self.TextEncoder\n    : __webpack_require__(/*! util */ \"./node_modules/util/util.js\").TextEncoder;\n\nlet cachedEncoder = new TextEncoder('utf-8');\n\nfunction passStringToWasm(arg) {\n\n    const buf = cachedEncoder.encode(arg);\n    const ptr = _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"](buf.length);\n    getUint8Memory().set(buf, ptr);\n    return [ptr, buf.length];\n}\n\nfunction setGlobalArgument(arg, i) {\n    const idx = globalArgumentPtr() / 4 + i;\n    getUint32Memory()[idx] = arg;\n}\n\nclass Set {\n\n                static __construct(ptr) {\n                    return new Set(ptr);\n                }\n\n                constructor(ptr) {\n                    this.ptr = ptr;\n                }\n            get board_size() {\n    return _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_set_board_size\"](this.ptr);\n}\nset board_size(arg0) {\n    return _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_set_board_size\"](this.ptr, arg0);\n}get number_of_features() {\n    return _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_set_number_of_features\"](this.ptr);\n}\nset number_of_features(arg0) {\n    return _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_set_number_of_features\"](this.ptr, arg0);\n}get feature_options() {\n    return _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_set_feature_options\"](this.ptr);\n}\nset feature_options(arg0) {\n    return _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_set_feature_options\"](this.ptr, arg0);\n}get sets() {\n    return _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_set_sets\"](this.ptr);\n}\nset sets(arg0) {\n    return _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_set_sets\"](this.ptr, arg0);\n}\n            free() {\n                const ptr = this.ptr;\n                this.ptr = 0;\n                _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_free\"](ptr);\n            }\n        static new(arg0, arg1) {\n    return Set.__construct(_set_bg__WEBPACK_IMPORTED_MODULE_0__[\"set_new\"](arg0, arg1));\n}\ninit_deck() {\n    const ret = _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"set_init_deck\"](this.ptr);\n    const len = getGlobalArgument(0);\n    const realRet = getStringFromWasm(ret, len);\n    _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ret, len * 1);\n    return realRet;\n}\nis_set(arg0) {\n    const [ptr0, len0] = passStringToWasm(arg0);\n    setGlobalArgument(len0, 0);\n    return (_set_bg__WEBPACK_IMPORTED_MODULE_0__[\"set_is_set\"](this.ptr, ptr0)) !== 0;\n}\nhint(arg0) {\n    const [ptr0, len0] = passStringToWasm(arg0);\n    setGlobalArgument(len0, 0);\n    const ret = _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"set_hint\"](this.ptr, ptr0);\n    const len = getGlobalArgument(0);\n    const realRet = getStringFromWasm(ret, len);\n    _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ret, len * 1);\n    return realRet;\n}\nupdate_board(arg0, arg1) {\n    const [ptr0, len0] = passStringToWasm(arg0);\n    setGlobalArgument(len0, 0);\n    const [ptr1, len1] = passStringToWasm(arg1);\n    setGlobalArgument(len1, 1);\n    return Set.__construct(_set_bg__WEBPACK_IMPORTED_MODULE_0__[\"set_update_board\"](this.ptr, ptr0, ptr1));\n}\nget_deck() {\n    const ret = _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"set_get_deck\"](this.ptr);\n    const len = getGlobalArgument(0);\n    const realRet = getStringFromWasm(ret, len);\n    _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ret, len * 1);\n    return realRet;\n}\nget_board() {\n    const ret = _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"set_get_board\"](this.ptr);\n    const len = getGlobalArgument(0);\n    const realRet = getStringFromWasm(ret, len);\n    _set_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ret, len * 1);\n    return realRet;\n}\n}\n\nlet slab = [];\n\nlet slab_next = 0;\n\nfunction addHeapObject(obj) {\n    if (slab_next === slab.length)\n        slab.push(slab.length + 1);\n    const idx = slab_next;\n    const next = slab[idx];\n\n    slab_next = next;\n\n    slab[idx] = { obj, cnt: 1 };\n    return idx << 1;\n}\n\nlet stack = [];\n\nfunction getObject(idx) {\n    if ((idx & 1) === 1) {\n        return stack[idx >> 1];\n    } else {\n        const val = slab[idx >> 1];\n\n    return val.obj;\n\n    }\n}\n\nfunction __wbindgen_object_clone_ref(idx) {\n    // If this object is on the stack promote it to the heap.\n    if ((idx & 1) === 1)\n        return addHeapObject(getObject(idx));\n\n    // Otherwise if the object is on the heap just bump the\n    // refcount and move on\n    const val = slab[idx >> 1];\n    val.cnt += 1;\n    return idx;\n}\n\nfunction dropRef(idx) {\n\n    let obj = slab[idx >> 1];\n\n    obj.cnt -= 1;\n    if (obj.cnt > 0)\n        return;\n\n    // If we hit 0 then free up our space in the slab\n    slab[idx >> 1] = slab_next;\n    slab_next = idx >> 1;\n}\n\nfunction __wbindgen_object_drop_ref(i) { dropRef(i); }\n\nfunction __wbindgen_string_new(p, l) {\n    return addHeapObject(getStringFromWasm(p, l));\n}\n\nfunction __wbindgen_number_new(i) { return addHeapObject(i); }\n\nfunction __wbindgen_number_get(n, invalid) {\n    let obj = getObject(n);\n    if (typeof(obj) === 'number')\n        return obj;\n    getUint8Memory()[invalid] = 1;\n    return 0;\n}\n\nfunction __wbindgen_undefined_new() { return addHeapObject(undefined); }\n\nfunction __wbindgen_null_new() {\n    return addHeapObject(null);\n}\n\nfunction __wbindgen_is_null(idx) {\n    return getObject(idx) === null ? 1 : 0;\n}\n\nfunction __wbindgen_is_undefined(idx) {\n    return getObject(idx) === undefined ? 1 : 0;\n}\n\nfunction __wbindgen_boolean_new(v) {\n    return addHeapObject(v === 1);\n}\n\nfunction __wbindgen_boolean_get(i) {\n    let v = getObject(i);\n    if (typeof(v) === 'boolean') {\n        return v ? 1 : 0;\n    } else {\n        return 2;\n    }\n}\n\nfunction __wbindgen_symbol_new(ptr, len) {\n    let a;\n    if (ptr === 0) {\n        a = Symbol();\n    } else {\n        a = Symbol(getStringFromWasm(ptr, len));\n    }\n    return addHeapObject(a);\n}\n\nfunction __wbindgen_is_symbol(i) {\n    return typeof(getObject(i)) === 'symbol' ? 1 : 0;\n}\n\nfunction __wbindgen_string_get(i, len_ptr) {\n    let obj = getObject(i);\n    if (typeof(obj) !== 'string')\n        return 0;\n    const [ptr, len] = passStringToWasm(obj);\n    getUint32Memory()[len_ptr / 4] = len;\n    return ptr;\n}\n\nfunction __wbindgen_throw(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n}\n\n\n\n//# sourceURL=webpack:///../pkg/set.js?");

/***/ }),

/***/ "../pkg/set_bg.wasm":
/*!**************************!*\
  !*** ../pkg/set_bg.wasm ***!
  \**************************/
/*! exports provided: memory, random_f64, __wbg_set_free, __wbg_get_set_board_size, __wbg_set_set_board_size, __wbg_get_set_number_of_features, __wbg_set_set_number_of_features, __wbg_get_set_feature_options, __wbg_set_set_feature_options, __wbg_get_set_sets, __wbg_set_set_sets, set_new, set_init_deck, set_is_set, set_hint, set_update_board, set_get_deck, set_get_board, __wbindgen_global_argument_ptr, __wbindgen_malloc, __wbindgen_free */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n\n// Instantiate WebAssembly module\nvar instance = new WebAssembly.Instance(__webpack_require__.w[module.i], {\n\t\"./set\": {\n\t\t\"__wbg_f_random_js_random_n\": __webpack_require__(\"../pkg/set.js\")[\"__wbg_f_random_js_random_n\"],\n\t\t\"__wbindgen_throw\": __webpack_require__(\"../pkg/set.js\")[\"__wbindgen_throw\"]\n\t}\n});\n\n// export exports from WebAssembly module\nmodule.exports = instance.exports;\n\n//# sourceURL=webpack:///../pkg/set_bg.wasm?");

/***/ }),

/***/ "./app.js":
/*!****************!*\
  !*** ./app.js ***!
  \****************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _pkg_set_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../pkg/set.js */ \"../pkg/set.js\");\n\n\nfunction assertEq(a, b) {\n  if (a !== b) {\n    console.error(`${a} != ${b}`);\n  } else {\n    console.log(`found ${a} === ${b}`);\n  }\n}\n\nlet set = _pkg_set_js__WEBPACK_IMPORTED_MODULE_0__[\"Set\"].new(4, 3);\nassertEq(\n  set.init_deck(),\n  '0_0_0_0,0_0_0_1,0_0_0_2,0_0_1_0,0_0_1_1,0_0_1_2,0_0_2_0,0_0_2_1,0_0_2_2,0_1_0_0,0_1_0_1,0_1_0_2,0_1_1_0,0_1_1_1,0_1_1_2,0_1_2_0,0_1_2_1,0_1_2_2,0_2_0_0,0_2_0_1,0_2_0_2,0_2_1_0,0_2_1_1,0_2_1_2,0_2_2_0,0_2_2_1,0_2_2_2,1_0_0_0,1_0_0_1,1_0_0_2,1_0_1_0,1_0_1_1,1_0_1_2,1_0_2_0,1_0_2_1,1_0_2_2,1_1_0_0,1_1_0_1,1_1_0_2,1_1_1_0,1_1_1_1,1_1_1_2,1_1_2_0,1_1_2_1,1_1_2_2,1_2_0_0,1_2_0_1,1_2_0_2,1_2_1_0,1_2_1_1,1_2_1_2,1_2_2_0,1_2_2_1,1_2_2_2,2_0_0_0,2_0_0_1,2_0_0_2,2_0_1_0,2_0_1_1,2_0_1_2,2_0_2_0,2_0_2_1,2_0_2_2,2_1_0_0,2_1_0_1,2_1_0_2,2_1_1_0,2_1_1_1,2_1_1_2,2_1_2_0,2_1_2_1,2_1_2_2,2_2_0_0,2_2_0_1,2_2_0_2,2_2_1_0,2_2_1_1,2_2_1_2,2_2_2_0,2_2_2_1,2_2_2_2'\n);\n\nassertEq(set.is_set('0_0_0_0,1_1_1_1,2_2_2_2'), true);\nassertEq(set.is_set('0_0_0_1,1_1_1_1,2_2_2_1'), true);\nassertEq(set.is_set('0_0_0_1,1_1_1_1,2_2_2_2'), false);\n\nassertEq(\n  set.hint(\n    '2_0_1_1,1_1_1_0,0_2_1_2,2_1_0_1,2_2_1_0,2_2_0_0,1_2_0_0,1_1_1_2,1_2_0_2,1_2_1_1,2_2_0_1,0_1_0_0'\n  ),\n  '0_2_1_2,2_2_1_0,1_2_1_1'\n);\n\nconst board = set.update_board(\n  '2_0_1_1,1_1_1_0,2_1_0_1,2_2_0_0,1_2_0_0,1_1_1_2,1_2_0_2,2_2_0_1,0_1_0_0',\n  '0_2_1_2,2_2_1_0,1_2_1_1'\n)\nassertEq(board.sets, 2);\nassertEq(board.get_deck(), '');\nassertEq(board.get_board(), '0_2_1_2,2_2_1_0,1_2_1_1,2_0_1_1,1_1_1_0,2_1_0_1,2_2_0_0,1_2_0_0,1_1_1_2,1_2_0_2,2_2_0_1,0_1_0_0');\n\n\n//# sourceURL=webpack:///./app.js?");

/***/ })

}]);